/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package testCode;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import javax.swing.table.TableColumn;
import machine.model.CellEditor;
import machine.model.CellRenderer;
import machine.model.ColumnHeaderRenderer;
import machine.model.RowHeaderRenderer;
import machine.presenter.MachineController;
import machine.model.RAMTableModel;
import machine.model.SpecialTableModel;
import machine.model.RegisterTableModel;

/**
 *
 * @author jl948836
 */
public class MachineView extends javax.swing.JFrame {

    private final MachineController controller;
    
    public static void main(String[] args){
        new MachineView();
    }
    
    /**
     * Creates new form MachineView
     */
    public MachineView() {
        controller = null;
        initComponents();
        
        super.pack();
        super.setLocationRelativeTo(null);
        super.setVisible(true); 
    }
    
    public MachineView(final MachineController controller){
        this.controller = controller;
        
        initComponents();
        //customInitComponents();
        //System.out.println(callStackPanel);
        //System.out.println(callStackPanel);
        
        super.setTitle("WAL - Machine Simulator");
        WindowListener exitListener = new WindowAdapter() {

            @Override
            public void windowClosing(WindowEvent e) {
                controller.disposeMachineView();
            }
        };
        super.addWindowListener(exitListener);
        
        ColumnHeaderRenderer colRenderer = new ColumnHeaderRenderer();
        RowHeaderRenderer rowRenderer = new RowHeaderRenderer();
        CellRenderer cellRenderer = new CellRenderer();
        CellEditor cellEditor = new CellEditor();
        cellEditor.setClickCountToStart(1);
        TableColumn column;
        
        ramTable.getTableHeader().setDefaultRenderer(colRenderer);
        ramTable.getColumnModel().getColumn(0).setCellRenderer(rowRenderer);
        for (int col = 1; col < 17; col++) {
            column = ramTable.getColumnModel().getColumn(col);
            column.setCellRenderer(cellRenderer);
            column.setCellEditor(cellEditor);
        }
        ramTable.getTableHeader().setReorderingAllowed(false);
        ramTable.getTableHeader().setResizingAllowed(false);
        ramTable.setCellSelectionEnabled(true);
        
        ipirTable.getTableHeader().setDefaultRenderer(colRenderer);
        ipirTable.getColumnModel().getColumn(0).setCellRenderer(
                new RowHeaderRenderer(new Color(128, 0, 0), Color.white,
                new Font("SansSerif", Font.BOLD, 16)));
        column = ipirTable.getColumnModel().getColumn(1);
        column.setCellRenderer(cellRenderer);
        
        registerTable.getTableHeader().setDefaultRenderer(colRenderer);
        registerTable.getColumnModel().getColumn(0).setCellRenderer(
                new RowHeaderRenderer(new Color(128, 0, 0), Color.white,
                new Font("SansSerif", Font.BOLD, 16)));
        column = registerTable.getColumnModel().getColumn(1);
        column.setCellRenderer(cellRenderer);
        column.setCellEditor(cellEditor);
        
        errorDisplay.setVisible(false);
        

        
        super.pack();
        super.setLocationRelativeTo(null);
        super.setVisible(true); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        controlPanel = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        speedComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        mainPanel = new javax.swing.JTabbedPane();
        machineTab = new javax.swing.JPanel();
        ramScrollPane = new javax.swing.JScrollPane();
        ramTable = new javax.swing.JTable();
        ipirScrolPane = new javax.swing.JScrollPane();
        ipirTable = new javax.swing.JTable();
        registerScrollPane = new javax.swing.JScrollPane();
        registerTable = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        helpTab = new javax.swing.JPanel();
        textEditorPanel = new javax.swing.JPanel();
        errorDisplayScrollPane = new javax.swing.JScrollPane();
        errorDisplay = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        openMachineState = new javax.swing.JMenuItem();
        openSourceFile = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        saveMachineState = new javax.swing.JMenuItem();
        saveSourceFile = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(3840, 2160));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setPreferredSize(new java.awt.Dimension(1100, 800));

        controlPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Control Panel"));
        controlPanel.setMaximumSize(new java.awt.Dimension(2534, 256));
        controlPanel.setMinimumSize(new java.awt.Dimension(528, 256));
        controlPanel.setPreferredSize(new java.awt.Dimension(726, 256));
        controlPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                controlPanelComponentResized(evt);
            }
        });

        jButton1.setText("Assemble");
        jButton1.setMaximumSize(new java.awt.Dimension(102, 27));
        jButton1.setMinimumSize(new java.awt.Dimension(102, 27));
        jButton1.setPreferredSize(new java.awt.Dimension(102, 27));

        jButton2.setText("Run");
        jButton2.setMaximumSize(new java.awt.Dimension(62, 27));
        jButton2.setMinimumSize(new java.awt.Dimension(62, 27));
        jButton2.setPreferredSize(new java.awt.Dimension(62, 27));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Stop");
        jButton3.setMaximumSize(new java.awt.Dimension(70, 27));
        jButton3.setMinimumSize(new java.awt.Dimension(70, 27));
        jButton3.setPreferredSize(new java.awt.Dimension(70, 27));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Step");
        jButton4.setMaximumSize(new java.awt.Dimension(70, 27));
        jButton4.setMinimumSize(new java.awt.Dimension(70, 27));
        jButton4.setPreferredSize(new java.awt.Dimension(70, 27));

        jButton5.setText("Reset");
        jButton5.setMaximumSize(new java.awt.Dimension(102, 27));
        jButton5.setMinimumSize(new java.awt.Dimension(102, 27));

        jButton6.setText("Disassemble");
        jButton6.setMaximumSize(new java.awt.Dimension(124, 27));
        jButton6.setMinimumSize(new java.awt.Dimension(124, 27));
        jButton6.setPreferredSize(new java.awt.Dimension(124, 27));

        speedComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setText("Speed:");

        javax.swing.GroupLayout controlPanelLayout = new javax.swing.GroupLayout(controlPanel);
        controlPanel.setLayout(controlPanelLayout);
        controlPanelLayout.setHorizontalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(speedComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );
        controlPanelLayout.setVerticalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlPanelLayout.createSequentialGroup()
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(speedComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        mainPanel.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        mainPanel.setMaximumSize(new java.awt.Dimension(2534, 1904));
        mainPanel.setMinimumSize(new java.awt.Dimension(528, 344));
        mainPanel.setPreferredSize(new java.awt.Dimension(726, 544));

        machineTab.setPreferredSize(new java.awt.Dimension(726, 544));

        ramScrollPane.setMaximumSize(new java.awt.Dimension(1710, 1284));
        ramScrollPane.setMinimumSize(new java.awt.Dimension(356, 231));
        ramScrollPane.setPreferredSize(new java.awt.Dimension(489, 366));

        ramTable.setModel(new RAMTableModel(this));
        ramTable.setMaximumSize(new java.awt.Dimension(1710, 1284));
        ramTable.setMinimumSize(new java.awt.Dimension(356, 231));
        ramTable.setPreferredSize(new java.awt.Dimension(489, 366));
        ramScrollPane.setViewportView(ramTable);

        ipirScrolPane.setMaximumSize(new java.awt.Dimension(570, 428));
        ipirScrolPane.setMinimumSize(new java.awt.Dimension(118, 77));
        ipirScrolPane.setPreferredSize(new java.awt.Dimension(163, 122));

        ipirTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        ipirTable.setMaximumSize(new java.awt.Dimension(570, 428));
        ipirTable.setMinimumSize(new java.awt.Dimension(118, 77));
        ipirTable.setPreferredSize(new java.awt.Dimension(163, 122));
        ipirScrolPane.setViewportView(ipirTable);

        registerScrollPane.setMaximumSize(new java.awt.Dimension(570, 1284));
        registerScrollPane.setMinimumSize(new java.awt.Dimension(118, 231));
        registerScrollPane.setPreferredSize(new java.awt.Dimension(163, 366));

        registerTable.setModel(new RegisterTableModel(this));
        registerTable.setMaximumSize(new java.awt.Dimension(570, 1284));
        registerTable.setMinimumSize(new java.awt.Dimension(118, 231));
        registerTable.setPreferredSize(new java.awt.Dimension(163, 366));
        registerScrollPane.setViewportView(registerTable);

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Disassemble Console"));

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(204, 204, 204));
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("No disassembler text yet");
        jScrollPane1.setViewportView(jTextArea1);

        jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Display Console"));

        jTextArea2.setEditable(false);
        jTextArea2.setBackground(new java.awt.Color(0, 0, 0));
        jTextArea2.setColumns(20);
        jTextArea2.setForeground(new java.awt.Color(0, 255, 0));
        jTextArea2.setRows(5);
        jTextArea2.setBorder(null);
        jScrollPane2.setViewportView(jTextArea2);

        javax.swing.GroupLayout machineTabLayout = new javax.swing.GroupLayout(machineTab);
        machineTab.setLayout(machineTabLayout);
        machineTabLayout.setHorizontalGroup(
            machineTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(machineTabLayout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2))
            .addGroup(machineTabLayout.createSequentialGroup()
                .addComponent(ramScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 519, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(machineTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(registerScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                    .addComponent(ipirScrolPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        machineTabLayout.setVerticalGroup(
            machineTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, machineTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(machineTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(machineTabLayout.createSequentialGroup()
                        .addComponent(ipirScrolPane, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(registerScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(ramScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(machineTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addGap(552, 552, 552))
        );

        mainPanel.addTab("Machine", machineTab);

        helpTab.setMaximumSize(null);
        helpTab.setMinimumSize(null);

        javax.swing.GroupLayout helpTabLayout = new javax.swing.GroupLayout(helpTab);
        helpTab.setLayout(helpTabLayout);
        helpTabLayout.setHorizontalGroup(
            helpTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 702, Short.MAX_VALUE)
        );
        helpTabLayout.setVerticalGroup(
            helpTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 665, Short.MAX_VALUE)
        );

        mainPanel.addTab("Help", helpTab);

        textEditorPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Text Editor"));
        textEditorPanel.setMaximumSize(new java.awt.Dimension(1267, 1904));
        textEditorPanel.setMinimumSize(new java.awt.Dimension(264, 344));
        textEditorPanel.setPreferredSize(new java.awt.Dimension(363, 544));

        javax.swing.GroupLayout textEditorPanelLayout = new javax.swing.GroupLayout(textEditorPanel);
        textEditorPanel.setLayout(textEditorPanelLayout);
        textEditorPanelLayout.setHorizontalGroup(
            textEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        textEditorPanelLayout.setVerticalGroup(
            textEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        errorDisplay.setEditable(false);
        errorDisplay.setColumns(20);
        errorDisplay.setRows(5);
        errorDisplay.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Errors"));
        errorDisplayScrollPane.setViewportView(errorDisplay);

        jMenu1.setText("File");

        openMachineState.setText("Open Machine State");
        openMachineState.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMachineStateActionPerformed(evt);
            }
        });
        jMenu1.add(openMachineState);

        openSourceFile.setText("Open Source File");
        jMenu1.add(openSourceFile);
        jMenu1.add(jSeparator1);

        saveMachineState.setText("Save Machine State");
        jMenu1.add(saveMachineState);

        saveSourceFile.setText("Save Source File");
        jMenu1.add(saveSourceFile);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(controlPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 707, Short.MAX_VALUE)
                    .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textEditorPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(errorDisplayScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(controlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(textEditorPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 573, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(errorDisplayScrollPane))
                    .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 692, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void controlPanelComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_controlPanelComponentResized
        // TODO add your handling code here:
    }//GEN-LAST:event_controlPanelComponentResized

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void openMachineStateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMachineStateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_openMachineStateActionPerformed
        
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(MachineView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            @Override
//            public void run() {
//                new MachineView().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel controlPanel;
    private javax.swing.JTextArea errorDisplay;
    private javax.swing.JScrollPane errorDisplayScrollPane;
    private javax.swing.JPanel helpTab;
    private javax.swing.JScrollPane ipirScrolPane;
    private javax.swing.JTable ipirTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JPanel machineTab;
    private javax.swing.JTabbedPane mainPanel;
    private javax.swing.JMenuItem openMachineState;
    private javax.swing.JMenuItem openSourceFile;
    private javax.swing.JScrollPane ramScrollPane;
    private javax.swing.JTable ramTable;
    private javax.swing.JScrollPane registerScrollPane;
    private javax.swing.JTable registerTable;
    private javax.swing.JMenuItem saveMachineState;
    private javax.swing.JMenuItem saveSourceFile;
    private javax.swing.JComboBox speedComboBox;
    private javax.swing.JPanel textEditorPanel;
    // End of variables declaration//GEN-END:variables

    public String getRAMBytes(int address) {
        int row = address / 16;
        int col = address % 16;
        return (String)ramTable.getValueAt(row, col + 1);
        }
    
    public String[] getAllRAMBytes() {
        String[] ramBytes= new String[256];

        int i = 0;
        for (int address = 0; address < 256; address++) {
                ramBytes[address] = getRAMBytes(address);
        }

        return ramBytes;
    }

    public void setRAMBytes(String value, int address) {
        int row = address / 16;
        int col = address % 16;
        ramTable.setValueAt(value, row, col + 1);
    }

    public void setAllRAMBytes(byte[] ramBytes) {
        for (int i = 0; i < 256; i++) {

        }
    }

    public String getInstructionPointer() {
        return (String) ipirTable.getValueAt(0, 1);
    }

    public void setInstructionPointer(String value) {
        ipirTable.setValueAt(value, 0, 1);
    }

    public String getInstructionRegister() {
        return (String) ipirTable.getValueAt(1, 1);
    }

    public void setInstructionRegister(String value) {
        ipirTable.setValueAt(value, 1, 1);
    }

    public String getRegisterBytes(int register) {
        return (String) registerTable.getValueAt(register, 1);
    }

    public String[] getAllRegisterBytes() {
        String[] registerBytes = new String[16];
        for (int i = 0; i < 16; i++) {
            registerBytes[i] = (String) registerTable.getValueAt(i, 1);
        }

        return registerBytes;
    }

    public void setRegisterBytes(String value, int register) {
        registerTable.setValueAt(value, register, 1);
    }

}
